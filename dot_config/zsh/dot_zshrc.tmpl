# --- Sheldon --- 
if type "sheldon" > /dev/null; then
  eval "$(sheldon source)"
fi

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f "$ZDOTDIR/.p10k.zsh" ]] || source "$ZDOTDIR/.p10k.zsh"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Source custom aliases and functions
if [ -f "$ZDOTDIR/.zsh_aliases" ]; then
  source "$ZDOTDIR/.zsh_aliases"
fi
if [ -f "$ZDOTDIR/.zsh_functions" ]; then
    source "$ZDOTDIR/.zsh_functions"
fi

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# --- Homebrew ---
{{- if eq .chezmoi.os "darwin" }}
alias brewup="brew update -q && brew upgrade && brew upgrade --cask"
alias brewupg="brew update -q && brew upgrade -q && brew upgrade --cask --greedy -q"
{{ else if eq .chezmoi.os "linux" }}
alias brewup="brew update && brew upgrade"
{{- end }}

# --- Abbreviations ---
alias vi=nvim
alias lg=lazygit
alias pyc=pycharm
alias zsh='chezmoi edit $XDG_CONFIG_HOME/zsh/.zshrc'

# --- Navigation ---
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

# --- Chezmoi without spawning a new shell ---
chezmoi-cd() {
  cd $(chezmoi source-path)
}

# --- yazi - terminal file manager ---
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# --- lsd - ls deluxe ---
alias ls="lsd"
alias l="lsd -l"
alias la="lsd -Al"

{{- if eq .chezmoi.os "linux" }}
# --- terraform ---
alias tf="terraform"
# Initialize Bash completion compatibility for Zsh
autoload -U bashcompinit && bashcompinit
# Setup Terraform completion using Bash compatibility layer
complete -o nospace -C /usr/bin/terraform terraform

# --- databricks cli ---
# usage: use_dbx stage, use_dbx legacy-prod. adjusts the cli
# uses profiles defined in .databrickscfg
use_dbx() {
  export DATABRICKS_CONFIG_PROFILE=$1
  echo "Databricks CLI profile set to: $DATABRICKS_CONFIG_PROFILE"
}
alias db="databricks"
alias dbc="databricks clusters"
alias dbcp="databricks clusters list --is-pinned"
{{- end }}
# --- zsh-vi-mode Configuration ---
# Map 'jj' to exit insert mode
ZVM_VI_INSERT_ESCAPE_BINDKEY=jj
# Show the mode in the prompt
ZVM_MODE_INDICATOR="%B%F{red}[NORMAL]%f%b "
# Change the cursor style (optional, but helpful)
ZVM_CURSOR_STYLE_ENABLED=true
ZVM_CURSOR_STYLE_NORMAL=block
ZVM_CURSOR_STYLE_INSERT=bar
ZVM_CURSOR_STYLE_VISUAL=underline

# --- remaining one-line configurations ---
source <(fzf --zsh)
eval "$(zoxide init zsh --cmd cd)"
