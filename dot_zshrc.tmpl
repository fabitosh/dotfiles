{{- if eq .chezmoi.os "linux" -}}
# Find programs installed by Linuxbrew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
# take system certificate directory, ant not homebrew openssl@3 one for now.
export SSL_CERT_DIR=/etc/ssl/certs/
{{- end -}}
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  rsync
  ssh-agent
  python
  zsh-autosuggestions
  zsh-syntax-highlighting
  zsh-vi-mode  # vi mode (https://github.com/jeffreytse/zsh-vi-mode) in terminal
)

source $ZSH/oh-my-zsh.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# --- Homebrew ---
{{- if eq .chezmoi.os "darwin" }}
alias brewup="brew update -q && brew upgrade && brew upgrade --cask"
alias brewupg="brew update -q && brew upgrade -q && brew upgrade --cask --greedy -q"
{{ else if eq .chezmoi.os "linux" }}
# sudo apt install openjdk-11-jdk -y
export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
alias brewup="brew update && brew upgrade"
{{- end }}

# --- Abbreviations ---
alias vi=nvim
alias lg=lazygit
alias pyc=pycharm

# --- Navigation ---
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

# --- yazi - terminal file manager ---
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# --- lsd - ls deluxe ---
alias ls="lsd"
alias l="lsd -l"
alias la="lsd -Al"

{{- if eq .chezmoi.os "linux" }}
# --- terraform ---
alias tf="terraform"
# Initialize Bash completion compatibility for Zsh
autoload -U bashcompinit && bashcompinit
# Setup Terraform completion using Bash compatibility layer
complete -o nospace -C /usr/bin/terraform terraform

# --- databricks cli ---
# usage: use_dbx stage, use_dbx legacy-prod. adjusts the cli
# uses profiles defined in .databrickscfg
use_dbx() {
  export DATABRICKS_CONFIG_PROFILE=$1
  echo "Databricks CLI profile set to: $DATABRICKS_CONFIG_PROFILE"
}
alias db="databricks"
alias dbc="databricks clusters"
alias dbcp="databricks clusters list --is-pinned"
{{- end }}
# --- zsh-vi-mode Configuration ---
# Map 'jj' to exit insert mode
ZVM_VI_INSERT_ESCAPE_BINDKEY=jj
# Show the mode in the prompt
ZVM_MODE_INDICATOR="%B%F{red}[NORMAL]%f%b "
# Change the cursor style (optional, but helpful)
ZVM_CURSOR_STYLE_ENABLED=true
ZVM_CURSOR_STYLE_NORMAL=block
ZVM_CURSOR_STYLE_INSERT=bar
ZVM_CURSOR_STYLE_VISUAL=underline

# --- pyenv  ---
export PYENV_ROOT="$HOME/.pyenv"
[[ -d "$PYENV_ROOT/bin" ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# --- remaining one-line configurations ---
source <(fzf --zsh)
eval "$(zoxide init zsh --cmd cd)"

{{- if eq .chezmoi.os "darwin" }}
eval "$(direnv hook zsh)"
export PATH="$PATH:~/.lmstudio/bin"
{{- end }}
